name: Data Pipeline

on:
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.3'

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Install dependencies
        run: |
          pip install -r requirements.txt


  fetch_news_data:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure DVC cache directory
        run: dvc config cache.dir .dvc/cache

      - name: Configure DVC
        run: |
          dvc remote modify origin endpointurl https://dagshub.com/lanaben/news-prediction-app.s3
          dvc remote modify origin --local access_key_id ${{ secrets.ACCES_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Git configuration
        run: |
          git config --global user.name 'lanaben'
          git config --global user.email 'lanaben@users.noreply.github.com'

      - name: Pull data with DVC
        run: dvc pull -r origin --force

      - name: List files
        run: ls

      - name: List fetched files
        run: ls -R data

      - name: List fetched files
        run: ls -R data/raw

      - name: Fetch news data
        run: python src/data/fetch_news_data.py
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: Add and commit data to DVC
        run: |
          if git diff --quiet; then
            echo "No changes to commit"
          else
            dvc add data/raw/articles.csv
            git add data.dvc
            git commit -m "Fetch news data"
            dvc push
            git push https://lanaben:${{ secrets.IIS }}@github.com/lanaben/news-prediction-app.git main
          fi
        env:
          API_KEY: ${{ secrets.API_KEY }}
          IIS: ${{ secrets.IIS }}


  process_news_data:
    needs: fetch_news_data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure DVC cache directory
        run: dvc config cache.dir .dvc/cache

      - name: Configure DVC
        run: |
          dvc remote modify origin endpointurl https://dagshub.com/lanaben/news-prediction-app.s3
          dvc remote modify origin --local access_key_id ${{ secrets.ACCES_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Git configuration
        run: |
          git config --global user.name 'lanaben'
          git config --global user.email 'lanaben@users.noreply.github.com'
          git pull --rebase origin main

      - name: Pull data with DVC
        run: dvc pull -r origin --force

      - name: Process news data
        run: python src/models/bert.py

      - name: Add and commit data to DVC
        run: |
          if git diff --quiet; then
            echo "No changes to commit"
          else
            dvc add data/processed/articles_with_keywords.csv
            git add data.dvc
            git commit -m "Add keywords to news data."
            dvc push
            git push https://lanaben:${{ secrets.IIS }}@github.com/lanaben/news-prediction-app.git main
          fi
        env:
          API_KEY: ${{ secrets.API_KEY }}
          IIS: ${{ secrets.IIS }}